{
  "engineConfig": {
    "defaultFlushInterval": "500",
    "datasourceConfigurations": [
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Query",
            "fieldNames": [
              "getItem",
              "getTag",
              "findItemsByTag"
            ]
          },
          {
            "typeName": "Mutation",
            "fieldNames": [
              "addItem",
              "addTagToItem",
              "createTag"
            ]
          }
        ],
        "childNodes": [
          {
            "typeName": "Item",
            "fieldNames": [
              "id",
              "name",
              "price",
              "tags"
            ]
          },
          {
            "typeName": "Tag",
            "fieldNames": [
              "id",
              "name",
              "value",
              "item"
            ]
          },
          {
            "typeName": "AddItemPayload",
            "fieldNames": [
              "ok",
              "item"
            ]
          },
          {
            "typeName": "AddTagToItemPayload",
            "fieldNames": [
              "ok",
              "item"
            ]
          },
          {
            "typeName": "CreateTagPayload",
            "fieldNames": [
              "ok",
              "tag"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "http://current-service:4001/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "http://current-service:4001/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
            "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "# noinspection GraphQLTypeRedefinition\nextend schema\n@link(\n    url: \"https://specs.apollo.dev/federation/v2.5\"\n    import: [\n        \"@authenticated\"\n        \"@composeDirective\"\n        \"@external\"\n        \"@extends\"\n        \"@inaccessible\"\n        \"@interfaceObject\"\n        \"@override\"\n        \"@provides\"\n        \"@key\"\n        \"@requires\"\n        \"@requiresScopes\"\n        \"@shareable\"\n        \"@tag\"\n    ]\n)\n\ntype Item {\n    id: ID!\n    name: String!\n    price: Int\n    tags: [Tag!]!\n}\n\ntype Tag {\n    id: ID!\n    name: String!\n    value: String!\n    item: Item\n}\n\ntype Query {\n    getItem(id: ID!): Item\n    getTag(id: ID!): Tag\n    findItemsByTag(name: String, value: String): [Item!]!\n}\n\ntype Mutation {\n    addItem(input: AddItemInput!): AddItemPayload!\n    addTagToItem(input: AddTagToItemInput!): AddTagToItemPayload!\n    createTag(input: CreateTagInput!): CreateTagPayload!\n}\n\ninput AddItemInput {\n    name: String!\n    price: Int\n}\n\ntype AddItemPayload {\n    ok: Boolean!\n    item: Item\n}\n\ninput AddTagToItemInput {\n    itemId: ID!\n    tagId: ID!\n}\n\ntype AddTagToItemPayload {\n    ok: Boolean!\n    item: Item\n}\n\ninput CreateTagInput {\n    name: String!\n    value: String!\n}\n\ntype CreateTagPayload {\n    ok: Boolean!\n    tag: Tag\n}\n\n"
          },
          "upstreamSchema": {
            "key": "afad61c60c5ca0b6355fab52dbdc6d26bfb7087a"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "0"
      }
    ],
    "fieldConfigurations": [
      {
        "typeName": "Query",
        "fieldName": "getItem",
        "argumentsConfiguration": [
          {
            "name": "id",
            "sourceType": "FIELD_ARGUMENT"
          }
        ]
      },
      {
        "typeName": "Query",
        "fieldName": "getTag",
        "argumentsConfiguration": [
          {
            "name": "id",
            "sourceType": "FIELD_ARGUMENT"
          }
        ]
      },
      {
        "typeName": "Query",
        "fieldName": "findItemsByTag",
        "argumentsConfiguration": [
          {
            "name": "name",
            "sourceType": "FIELD_ARGUMENT"
          },
          {
            "name": "value",
            "sourceType": "FIELD_ARGUMENT"
          }
        ]
      },
      {
        "typeName": "Mutation",
        "fieldName": "addItem",
        "argumentsConfiguration": [
          {
            "name": "input",
            "sourceType": "FIELD_ARGUMENT"
          }
        ]
      },
      {
        "typeName": "Mutation",
        "fieldName": "addTagToItem",
        "argumentsConfiguration": [
          {
            "name": "input",
            "sourceType": "FIELD_ARGUMENT"
          }
        ]
      },
      {
        "typeName": "Mutation",
        "fieldName": "createTag",
        "argumentsConfiguration": [
          {
            "name": "input",
            "sourceType": "FIELD_ARGUMENT"
          }
        ]
      }
    ],
    "graphqlSchema": "schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nscalar openfed__Scope\n\ntype Item {\n  id: ID!\n  name: String!\n  price: Int\n  tags: [Tag!]!\n}\n\ntype Tag {\n  id: ID!\n  name: String!\n  value: String!\n  item: Item\n}\n\ntype Query {\n  getItem(id: ID!): Item\n  getTag(id: ID!): Tag\n  findItemsByTag(name: String, value: String): [Item!]!\n}\n\ntype Mutation {\n  addItem(input: AddItemInput!): AddItemPayload!\n  addTagToItem(input: AddTagToItemInput!): AddTagToItemPayload!\n  createTag(input: CreateTagInput!): CreateTagPayload!\n}\n\ninput AddItemInput {\n  name: String!\n  price: Int\n}\n\ntype AddItemPayload {\n  ok: Boolean!\n  item: Item\n}\n\ninput AddTagToItemInput {\n  itemId: ID!\n  tagId: ID!\n}\n\ntype AddTagToItemPayload {\n  ok: Boolean!\n  item: Item\n}\n\ninput CreateTagInput {\n  name: String!\n  value: String!\n}\n\ntype CreateTagPayload {\n  ok: Boolean!\n  tag: Tag\n}",
    "stringStorage": {
      "afad61c60c5ca0b6355fab52dbdc6d26bfb7087a": "schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable repeatable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ninput AddItemInput {\n  name: String!\n  price: Int\n}\n\ntype AddItemPayload {\n  item: Item\n  ok: Boolean!\n}\n\ninput AddTagToItemInput {\n  itemId: ID!\n  tagId: ID!\n}\n\ntype AddTagToItemPayload {\n  item: Item\n  ok: Boolean!\n}\n\ninput CreateTagInput {\n  name: String!\n  value: String!\n}\n\ntype CreateTagPayload {\n  ok: Boolean!\n  tag: Tag\n}\n\ntype Item {\n  id: ID!\n  name: String!\n  price: Int\n  tags: [Tag!]!\n}\n\ntype Mutation {\n  addItem(input: AddItemInput!): AddItemPayload!\n  addTagToItem(input: AddTagToItemInput!): AddTagToItemPayload!\n  createTag(input: CreateTagInput!): CreateTagPayload!\n}\n\ntype Query {\n  findItemsByTag(name: String, value: String): [Item!]!\n  getItem(id: ID!): Item\n  getTag(id: ID!): Tag\n}\n\ntype Tag {\n  id: ID!\n  item: Item\n  name: String!\n  value: String!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope"
    }
  },
  "version": "326e1ce1-74cf-4fce-96d1-ee34aa187051",
  "subgraphs": [
    {
      "id": "0",
      "name": "current-service",
      "routingUrl": "http://current-service:4001/graphql"
    }
  ],
  "compatibilityVersion": "1:0.37.1"
}
